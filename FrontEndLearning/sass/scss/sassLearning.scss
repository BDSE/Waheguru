
@import 'importedFile.css';
@import '_importedFile.scss';


//////////Variables////////////

$width: 100px; $height: 20px;
$imgUrl: "../images/nature/nature1.jpg";  //string data type
$element: myDiv;
$ele: myAnotherDiv;

$colGrayHex: #ccc; //color data type
$colGray: gray;

$list: 2px 3px 4px 5px solid black; //list data type
$marginList: 2px 8px;

$headers: h1,h2,h3,h4;
$headerFonts: 25px,20px,15px,10px;

$radius: 2px 3px 4px 5px;

////////////use of vasriable////////////////////////

#parentDiv {
    width: $width+2-1.3;
    height: $height;
}

#parent #{$element}{
    width: $width;
}

#parent ##{$element}{
    width: $width;
}

#parent .#{$element}{
    width: $width;
}

//////////////Selector Inheritance////////////////////

#parent{
    background-image: url($imgUrl);
    #child1{
        width: $width;
    }
    #child2{
        width: $width;
        #child3{
            width: $width;
        }
    }
    &.someClass{
        width: $width;
    }
    & #someId{
        width: $width;
    }
}

/////////////////////PropertyInheritance//////////////////

#parent %shared1{
    width: $width;
    height: $height;
}

%shared2{
    margin: $marginList;
    border: 2px solid green;
    border-radius: $list;
    .test2{
        color:red;
    }
}

.content{
    @extend %shared1;
    border: 8px solid red;
}

.img{
    @extend %shared1;
    margin: 0 auto;
}

.sharedFromShared2{
    @extend %shared2;
}

.test{
    @extend .sharedFromShared2;
    font: bold 14px Arial;
}


//////////////////Mixins//////////////////////////////
/////////////////it is reusable piece of css code/////

@mixin button($topcolor, $bottomcolor){
  background: $topcolor;
  background-image: -webkit-linear-gradient(top, $topcolor, $bottomcolor);
  background-image: -moz-linear-gradient(top, $topcolor, $bottomcolor);
  background-image: -ms-linear-gradient(top, $topcolor, $bottomcolor);
  background-image: -o-linear-gradient(top, $topcolor, $bottomcolor);
  background-image: linear-gradient(to bottom, $topcolor, $bottomcolor);
  -webkit-border-radius: 28;
  -moz-border-radius: 28;
  border-radius: 28px;
  font-family: Arial;
  color: #ffffff;
  font-size: 20px;
  padding: 10px 20px 10px 20px;
  text-decoration: none;
    
}

@mixin basicMixin($ele){
    .#{$ele}{
        
        color: red;
        font: bold 12px Arial;
        
    }
}

@mixin boxShadow($shadow){
    -webkit-box-shadow: $shadow;
    -moz-box-shadow: $shadow;
    -o-box-shadow: $shadow;
     box-shadow: $shadow;
}

.buttonRedBlack{
    @include button(red, black);
}

.buttonGreenYello{
    @include button(green,yellow);
}

body{
    line-height: 1.2em;
    @include basicMixin($ele);
}


//////////////////operators////////////////

//basically use the mathematical operators as you like
// width: $width +2;
// width: $width+2px;




/////////////////Looops//////////////////////////

//@for $i from 1 through 4{
//    h#{$i}{
//        font-size: 25px;
//    }
//}


//better way
@for $i from 1 through 4{
    #{nth($headers, $i)}{
        font-size: nth($headerFonts, $i);
    }
}



//for each loop
//@each $head in $headers{
//    #{$head}{
//        font-size: 35px;
//    }
//}

//////////////////////Sass Functions//////////////////

@function list-match($list1, $list2){
    $len1: length($list1);
    $len2: length($list2);
    
    @if $len1 == $len2{
        @return "match"
    }
    @else{
        @return "no match"
    }
}
@mixin border-radius($radius){
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -o-border-radius: $radius;
     border-radius: $radius;
}

.someDivUsingMyFunction{
    content: list-match($headers,$headerFonts);
    @include border-radius($radius);
    display: block;
}





























